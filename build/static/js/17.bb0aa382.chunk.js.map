{"version":3,"sources":["components/_external-pages/staking/StakingContent.js","pages/Staking.js"],"names":["RootStyle","styled","theme","padding","spacing","backgroundSize","backgroundRepeat","backgroundPosition","p","fontSize","breakpoints","down","ContentStyle","maxWidth","margin","display","minHeight","flexDirection","justifyContent","StakingContent","React","buttonText","setButtonText","isDisabled","setDisabled","accounts","setAccounts","onboarding","current","MetaMaskOnboarding","isMetaMaskInstalled","length","stopOnboarding","size","setSize","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","id","Container","style","background","borderRadius","backgroundImage","marginBottom","Stack","direction","alignItems","sx","mb","Box","flexGrow","Typography","variant","gutterBottom","color","LoadingButton","fullWidth","type","disabled","onClick","ethereum","request","method","then","newAccounts","startOnboarding","scroll","SmoothScroll","speed","speedAsDuration","Page","height","overflow","position","backgroundColor","palette","default","StakingPage","title"],"mappings":"6XAkCMA,EAAYC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBAC5BC,QAASD,EAAME,QAAQ,GAAI,EAAG,EAAG,GACjCC,eAAgB,UAChBC,iBAAkB,YAClBC,mBAAoB,QACpBC,EAAG,CACCC,SAAU,SAEbP,EAAMQ,YAAYC,KAAK,MAAQ,CAC5BR,QAASD,EAAME,QAAQ,GAAI,EAAG,EAAG,QAInCQ,EAAeX,YAAO,MAAPA,EAAc,kBAAgB,CAC/CY,SAAU,IACVC,OAAQ,OACRC,QAAS,OACTC,UAAW,OACXC,cAAe,SACfC,eAAgB,SAChBf,QAP+B,EAAGD,MAOnBE,QAAQ,GAAI,OAwBhB,SAASe,IACpB,MAAoCC,WANnB,mCAMjB,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,YAAe,GAAjD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,WAAe,IAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAaP,WAEnBA,aAAgB,WACPO,EAAWC,UACbD,EAAWC,QAAU,IAAIC,OAE7B,IAEHT,aAAgB,WACRS,IAAmBC,wBACfL,EAASM,OAAS,GAClBT,EAlBO,aAmBPE,GAAY,GACZG,EAAWC,QAAQI,mBAEnBV,EAvBK,WAwBLE,GAAY,OAGrB,CAACC,IAEJL,aAAgB,WAIRS,IAAmBC,wBASxB,IAEH,IAWA,EArEJ,WACI,MAAwBV,WAAe,CAAC,EAAG,IAA3C,mBAAOa,EAAP,KAAaC,EAAb,KASA,OARAd,mBAAsB,WAClB,SAASe,IACLD,EAAQ,CAACE,OAAOC,WAAYD,OAAOE,cAIvC,OAFAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IACO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACnD,IACIF,EA2DiBQ,GAAxB,6BACA,OACI,cAACzC,EAAD,CAAW0C,GAAG,UAAd,SACY,cAACC,EAAA,EAAD,CAAW9B,SAAS,KAAK+B,MAAO,CAACC,WAAW,UAAUC,aAAa,OAAOC,gBAAgB,+BAA+B1C,eAAe,SAAxI,SACI,eAACO,EAAD,CAAcgC,MAAO,CAACI,aAAa,SAAnC,UACI,cAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,GAAI,CAAEC,GAAI,GAArD,SACI,eAACC,EAAA,EAAD,CAAKF,GAAI,CAAEG,SAAU,GAArB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAACN,GAAI,CAAEO,MAAO,kBAAnD,wCAGA,cAACH,EAAA,EAAD,CAAYJ,GAAI,CAAEO,MAAO,kBAAzB,mDAMR,cAACC,EAAA,EAAD,CAAeC,WAAS,EAAC5B,KAAK,QAAQ6B,KAAK,SAASL,QAAQ,YAAYM,SAAUxC,EAAYyC,QA3BtG,WACRnC,IAAmBC,sBACnBM,OAAO6B,SACFC,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,GAAD,OAAiB3C,EAAY2C,MAEvC1C,EAAWC,QAAQ0C,mBAqBH,SACKjD,W,aCnIpBkD,EAAS,I,OAAIC,GAAa,eAAgB,CACrDC,MAAO,IACPC,iBAAiB,IAGb1E,EAAYC,YAAO0E,IAAP1E,CAAa,CAC7B2E,OAAQ,SAGJhE,EAAeX,YAAO,MAAPA,EAAc,kBAAgB,CACjD4E,SAAU,SACVC,SAAU,WACVC,gBAHiC,EAAG7E,MAGb8E,QAAQnC,WAAWoC,YAK7B,SAASC,IACtB,OACE,cAAC,EAAD,CAAWC,MAAM,OAAOzC,GAAG,WAA3B,SACE,cAAC,EAAD,UACE,cAACvB,EAAD","file":"static/js/17.bb0aa382.chunk.js","sourcesContent":["// material\nimport * as React from \"react\";\nimport { alpha, useTheme, styled } from \"@material-ui/core/styles\";\nimport {\n    Box,\n    Grid,\n    Button,\n    Container,\n    Typography,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    List,\n    ListItem,\n    Divider,\n    ListItemText,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    Stack,\n} from \"@material-ui/core\";\nimport SvgIconStyle from \"components/SvgIconStyle\";\nimport MetaMaskOnboarding from '@metamask/onboarding';\n//\nimport { varFadeInUp, MotionInView } from \"../../animate\";\nimport {LoadingButton} from \"@material-ui/lab\";\nimport AuthLayout from \"../../../layouts/AuthLayout\";\nimport MainNavbar from \"../../../layouts/main/MainNavbar\";\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(\"div\")(({ theme }) => ({\n    padding: theme.spacing(20, 0, 0, 0),\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"right\",\n    p: {\n        fontSize: \"14px\",\n    },\n    [theme.breakpoints.down(\"xl\")]: {\n        padding: theme.spacing(20, 0, 0, 0),\n    },\n}));\n\nconst ContentStyle = styled(\"div\")(({ theme }) => ({\n    maxWidth: 480,\n    margin: 'auto',\n    display: 'flex',\n    minHeight: '50vh',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(12, 0)\n}));\n\n\n\n\nfunction useWindowSize() {\n    const [size, setSize] = React.useState([0, 0]);\n    React.useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener(\"resize\", updateSize);\n        updateSize();\n        return () => window.removeEventListener(\"resize\", updateSize);\n    }, []);\n    return size;\n}\n\nconst ONBOARD_TEXT = 'Click here to install MetaMask!';\nconst CONNECT_TEXT = 'Connect';\nconst CONNECTED_TEXT = 'Connected';\n// ----------------------------------------------------------------------\n\nexport default function StakingContent() {\n    const [buttonText, setButtonText] = React.useState(ONBOARD_TEXT);\n    const [isDisabled, setDisabled] = React.useState(false);\n    const [accounts, setAccounts] = React.useState([]);\n    const onboarding = React.useRef();\n\n    React.useEffect(() => {\n        if (!onboarding.current) {\n           onboarding.current = new MetaMaskOnboarding();\n        }\n    }, []);\n\n    React.useEffect(() => {\n        if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n            if (accounts.length > 0) {\n                setButtonText(CONNECTED_TEXT);\n                setDisabled(true);\n                onboarding.current.stopOnboarding();\n            } else {\n                setButtonText(CONNECT_TEXT);\n                setDisabled(false);\n            }\n        }\n    }, [accounts]);\n\n    React.useEffect(() => {\n        function handleNewAccounts(newAccounts) {\n            setAccounts(newAccounts);\n        }\n        if (MetaMaskOnboarding.isMetaMaskInstalled() && 1==2) {\n            window.ethereum\n                .request({ method: 'eth_requestAccounts' })\n                .then(handleNewAccounts);\n            window.ethereum.on('accountsChanged', handleNewAccounts);\n            return () => {\n                window.ethereum.off('accountsChanged', handleNewAccounts);\n            };\n        }\n    }, []);\n\n    const onClick = () => {\n        if (MetaMaskOnboarding.isMetaMaskInstalled()) {\n            window.ethereum\n                .request({ method: 'eth_requestAccounts' })\n                .then((newAccounts) => setAccounts(newAccounts));\n        } else {\n            onboarding.current.startOnboarding();\n        }\n    };\n\n\n    const [width, height] = useWindowSize();\n    return (\n        <RootStyle id=\"staking\">\n                    <Container maxWidth=\"xs\" style={{background:\"#040404\",borderRadius:\"15px\",backgroundImage:\"url(/images/garyLoginBg.jpg)\",backgroundSize:\"cover\"}}>\n                        <ContentStyle style={{marginBottom:\"100px\"}}>\n                            <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 5 }}>\n                                <Box sx={{ flexGrow: 1 }}>\n                                    <Typography variant=\"h4\" gutterBottom sx={{ color: 'text.secondary' }}>\n                                        Welcome to ConflictedGarys\n                                    </Typography>\n                                    <Typography sx={{ color: 'text.secondary' }}>Your staking journey starts here</Typography>\n                                </Box>\n\n\n                            </Stack>\n\n                            <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" disabled={isDisabled} onClick={onClick}>\n                                {buttonText}\n                            </LoadingButton>\n\n                </ContentStyle>\n            </Container>\n        </RootStyle>\n    );\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\"\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Container, Typography, Box, Grid } from '@material-ui/core';\n// import { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n// components\nimport Page from '../components/Page';\nimport {\n  StakingContent,\n} from '../components/_external-pages/staking';\nimport SmoothScroll from \"smooth-scroll\";\n\n// ----------------------------------------------------------------------\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 1000,\n  speedAsDuration: true,\n});\n\nconst RootStyle = styled(Page)({\n  height: '100%',\n});\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  overflow: 'hidden',\n  position: 'relative',\n  backgroundColor: theme.palette.background.default\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function StakingPage() {\n  return (\n    <RootStyle title=\"Gary\" id=\"move_top\">\n      <ContentStyle>\n        <StakingContent/>\n      </ContentStyle>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}