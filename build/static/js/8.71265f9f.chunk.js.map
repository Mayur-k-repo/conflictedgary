{"version":3,"sources":["hooks/useIsMountedRef.js","components/authentication/reset-password/ResetPasswordForm.js","pages/authentication/ResetPassword.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","ResetPasswordForm","onSent","onGetEmail","resetPassword","useAuth","isMountedRef","ResetPasswordSchema","Yup","shape","email","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","setErrors","setSubmitting","console","error","afterSubmit","message","errors","touched","isSubmitting","handleSubmit","getFieldProps","value","autoComplete","noValidate","Stack","spacing","Alert","severity","TextField","fullWidth","type","label","Boolean","helperText","LoadingButton","size","variant","loading","RootStyle","styled","Page","display","minHeight","alignItems","justifyContent","padding","theme","ResetPassword","useState","setEmail","sent","setSent","title","LogoOnlyLayout","Container","Box","sx","maxWidth","mx","textAlign","Typography","gutterBottom","Button","component","RouterLink","to","PATH_AUTH","login","mt","paragraph","color","mb"],"mappings":"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","file":"static/js/8.71265f9f.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(\n    () => () => {\n      isMounted.current = false;\n    },\n    []\n  );\n\n  return isMounted;\n}\n","import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { TextField, Alert, Stack } from '@material-ui/core';\nimport { LoadingButton } from '@material-ui/lab';\n// hooks\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\n\n// ----------------------------------------------------------------------\n\nResetPasswordForm.propTypes = {\n  onSent: PropTypes.func,\n  onGetEmail: PropTypes.func\n};\n\nexport default function ResetPasswordForm({ onSent, onGetEmail }) {\n  const { resetPassword } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const ResetPasswordSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required')\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: ''\n    },\n    validationSchema: ResetPasswordSchema,\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\n      try {\n        await resetPassword(values.email);\n        if (isMountedRef.current) {\n          onSent();\n          onGetEmail(formik.values.email);\n          setSubmitting(false);\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMountedRef.current) {\n          setErrors({ afterSubmit: error.message });\n          setSubmitting(false);\n        }\n      }\n    }\n  });\n\n  const { errors, touched, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\n\n          <TextField\n            fullWidth\n            {...getFieldProps('email')}\n            type=\"email\"\n            label=\"Email address\"\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n\n          <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n            Reset Password\n          </LoadingButton>\n        </Stack>\n      </Form>\n    </FormikProvider>\n  );\n}\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@material-ui/core/styles';\nimport { Box, Button, Container, Typography } from '@material-ui/core';\n// layouts\nimport LogoOnlyLayout from '../../layouts/LogoOnlyLayout';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport { ResetPasswordForm } from '../../components/authentication/reset-password';\n//\n// import { SentIcon } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  display: 'flex',\n  minHeight: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [sent, setSent] = useState(false);\n\n  return (\n    <RootStyle title=\"Reset Password | ConflictedGarys\">\n      <LogoOnlyLayout />\n\n      <Container>\n        <Box sx={{ maxWidth: 480, mx: 'auto' }}>\n          {!sent ? (\n            <>\n              <Typography variant=\"h3\" paragraph>\n                Forgot your password?\n              </Typography>\n              <Typography sx={{ color: 'text.secondary', mb: 5 }}>\n                Please enter the email address associated with your account and We will email you a link to reset your\n                password.\n              </Typography>\n\n              <ResetPasswordForm onSent={() => setSent(true)} onGetEmail={(value) => setEmail(value)} />\n\n              <Button fullWidth size=\"large\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 1 }}>\n                Back\n              </Button>\n            </>\n          ) : (\n            <Box sx={{ textAlign: 'center' }}>\n              {/* <SentIcon sx={{ mb: 5, mx: 'auto', height: 160 }} /> */}\n\n              <Typography variant=\"h3\" gutterBottom>\n                Request sent successfully\n              </Typography>\n              <Typography>\n                We have sent a confirmation email to &nbsp;\n                <strong>{email}</strong>\n                <br />\n                Please check your email.\n              </Typography>\n\n              <Button size=\"large\" variant=\"contained\" component={RouterLink} to={PATH_AUTH.login} sx={{ mt: 5 }}>\n                Back\n              </Button>\n            </Box>\n          )}\n        </Box>\n      </Container>\n    </RootStyle>\n  );\n}\n"],"sourceRoot":""}